// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCatalogXMLParams creates a new GetCatalogXMLParams object
// with the default values initialized.
func NewGetCatalogXMLParams() *GetCatalogXMLParams {
	var ()
	return &GetCatalogXMLParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCatalogXMLParamsWithTimeout creates a new GetCatalogXMLParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCatalogXMLParamsWithTimeout(timeout time.Duration) *GetCatalogXMLParams {
	var ()
	return &GetCatalogXMLParams{

		timeout: timeout,
	}
}

// NewGetCatalogXMLParamsWithContext creates a new GetCatalogXMLParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCatalogXMLParamsWithContext(ctx context.Context) *GetCatalogXMLParams {
	var ()
	return &GetCatalogXMLParams{

		Context: ctx,
	}
}

// NewGetCatalogXMLParamsWithHTTPClient creates a new GetCatalogXMLParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCatalogXMLParamsWithHTTPClient(client *http.Client) *GetCatalogXMLParams {
	var ()
	return &GetCatalogXMLParams{
		HTTPClient: client,
	}
}

/*GetCatalogXMLParams contains all the parameters to send to the API endpoint
for the get catalog Xml operation typically these are written to a http.Request
*/
type GetCatalogXMLParams struct {

	/*XKillbillAPIKey*/
	XKillbillAPIKey string
	/*XKillbillAPISecret*/
	XKillbillAPISecret string
	/*RequestedDate*/
	RequestedDate *strfmt.Date

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get catalog Xml params
func (o *GetCatalogXMLParams) WithTimeout(timeout time.Duration) *GetCatalogXMLParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get catalog Xml params
func (o *GetCatalogXMLParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get catalog Xml params
func (o *GetCatalogXMLParams) WithContext(ctx context.Context) *GetCatalogXMLParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get catalog Xml params
func (o *GetCatalogXMLParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get catalog Xml params
func (o *GetCatalogXMLParams) WithHTTPClient(client *http.Client) *GetCatalogXMLParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get catalog Xml params
func (o *GetCatalogXMLParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXKillbillAPIKey adds the xKillbillAPIKey to the get catalog Xml params
func (o *GetCatalogXMLParams) WithXKillbillAPIKey(xKillbillAPIKey string) *GetCatalogXMLParams {
	o.SetXKillbillAPIKey(xKillbillAPIKey)
	return o
}

// SetXKillbillAPIKey adds the xKillbillApiKey to the get catalog Xml params
func (o *GetCatalogXMLParams) SetXKillbillAPIKey(xKillbillAPIKey string) {
	o.XKillbillAPIKey = xKillbillAPIKey
}

// WithXKillbillAPISecret adds the xKillbillAPISecret to the get catalog Xml params
func (o *GetCatalogXMLParams) WithXKillbillAPISecret(xKillbillAPISecret string) *GetCatalogXMLParams {
	o.SetXKillbillAPISecret(xKillbillAPISecret)
	return o
}

// SetXKillbillAPISecret adds the xKillbillApiSecret to the get catalog Xml params
func (o *GetCatalogXMLParams) SetXKillbillAPISecret(xKillbillAPISecret string) {
	o.XKillbillAPISecret = xKillbillAPISecret
}

// WithRequestedDate adds the requestedDate to the get catalog Xml params
func (o *GetCatalogXMLParams) WithRequestedDate(requestedDate *strfmt.Date) *GetCatalogXMLParams {
	o.SetRequestedDate(requestedDate)
	return o
}

// SetRequestedDate adds the requestedDate to the get catalog Xml params
func (o *GetCatalogXMLParams) SetRequestedDate(requestedDate *strfmt.Date) {
	o.RequestedDate = requestedDate
}

// WriteToRequest writes these params to a swagger request
func (o *GetCatalogXMLParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param X-Killbill-ApiKey
	if err := r.SetHeaderParam("X-Killbill-ApiKey", o.XKillbillAPIKey); err != nil {
		return err
	}

	// header param X-Killbill-ApiSecret
	if err := r.SetHeaderParam("X-Killbill-ApiSecret", o.XKillbillAPISecret); err != nil {
		return err
	}

	if o.RequestedDate != nil {

		// query param requestedDate
		var qrRequestedDate strfmt.Date
		if o.RequestedDate != nil {
			qrRequestedDate = *o.RequestedDate
		}
		qRequestedDate := qrRequestedDate.String()
		if qRequestedDate != "" {
			if err := r.SetQueryParam("requestedDate", qRequestedDate); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
