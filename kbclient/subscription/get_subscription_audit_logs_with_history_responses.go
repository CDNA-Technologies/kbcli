// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CDNA-Technologies/kbcli/v3/kbmodel"
)

// GetSubscriptionAuditLogsWithHistoryReader is a Reader for the GetSubscriptionAuditLogsWithHistory structure.
type GetSubscriptionAuditLogsWithHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubscriptionAuditLogsWithHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubscriptionAuditLogsWithHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSubscriptionAuditLogsWithHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSubscriptionAuditLogsWithHistoryOK creates a GetSubscriptionAuditLogsWithHistoryOK with default headers values
func NewGetSubscriptionAuditLogsWithHistoryOK() *GetSubscriptionAuditLogsWithHistoryOK {
	return &GetSubscriptionAuditLogsWithHistoryOK{}
}

/* GetSubscriptionAuditLogsWithHistoryOK describes a response with status code 200, with default header values.

successful operation
*/
type GetSubscriptionAuditLogsWithHistoryOK struct {
	Payload []*kbmodel.AuditLog
}

func (o *GetSubscriptionAuditLogsWithHistoryOK) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/subscriptions/{subscriptionId}/auditLogsWithHistory][%d] getSubscriptionAuditLogsWithHistoryOK  %+v", 200, o.Payload)
}
func (o *GetSubscriptionAuditLogsWithHistoryOK) GetPayload() []*kbmodel.AuditLog {
	return o.Payload
}

func (o *GetSubscriptionAuditLogsWithHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubscriptionAuditLogsWithHistoryNotFound creates a GetSubscriptionAuditLogsWithHistoryNotFound with default headers values
func NewGetSubscriptionAuditLogsWithHistoryNotFound() *GetSubscriptionAuditLogsWithHistoryNotFound {
	return &GetSubscriptionAuditLogsWithHistoryNotFound{}
}

/* GetSubscriptionAuditLogsWithHistoryNotFound describes a response with status code 404, with default header values.

Subscription not found
*/
type GetSubscriptionAuditLogsWithHistoryNotFound struct {
}

func (o *GetSubscriptionAuditLogsWithHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/subscriptions/{subscriptionId}/auditLogsWithHistory][%d] getSubscriptionAuditLogsWithHistoryNotFound ", 404)
}

func (o *GetSubscriptionAuditLogsWithHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
